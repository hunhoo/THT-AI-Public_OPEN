/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Pakar;

import javax.swing.JOptionPane;

/**
 *
 * @author Tian
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel10 = new javax.swing.JLabel();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Program Sistem Pakar Sederhana");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Diagnosis Penyakit THT");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Universitas Singaperbangsa Karawang");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Jawab Semua Pertanyaan Berikut Ini");

        jButton1.setText("Start Diagnosis");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Logo Kesehatan.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Creative By :");

        jToggleButton1.setText("Detail Penyakit");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Septian Maulana & Meydina Ariyani");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("1141177004039    1141177004047");

        jToggleButton2.setText("Tutorial Menu");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Life.png"))); // NOI18N

        jToggleButton3.setText("Daftar Pasien");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jToggleButton4.setText("Rekam Medis");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        jToggleButton5.setText("History Medis");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        jMenu1.setText("Menu");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Menu 1.png"))); // NOI18N
        jMenuItem1.setText("Menu Utama");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Menu 4.png"))); // NOI18N
        jMenuItem5.setText("Detail Penyakit");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Menu 5.png"))); // NOI18N
        jMenuItem6.setText("Daftar Pasien");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Menu 2.png"))); // NOI18N
        jMenuItem3.setText("Rekam Medis");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Menu 7.png"))); // NOI18N
        jMenuItem7.setText("History Medis");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Menu 3.png"))); // NOI18N
        jMenuItem4.setText("Tutorial Menu");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pakar/Menu 6.png"))); // NOI18N
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(142, 142, 142))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jToggleButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jToggleButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jToggleButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton3)
                    .addComponent(jToggleButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
int answer = JOptionPane.showConfirmDialog(this, "Apakah Anda demam?", "Gejala 1", JOptionPane.YES_NO_OPTION);
if(answer == 0) //Jawaban Yes dari GEJALA 1
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda sakit kepala?", "Gejala 2", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri saat bicara atau menelan?", "Gejala 3", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri tenggorokan?", "Gejala 7", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami selaput lendir merah?", "Gejala 39", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami muntah?", "Gejala 10", JOptionPane.YES_NO_OPTION);
if(answer == 0)
//{
//answer = JOptionPane.showConfirmDialog(this, "Apakah Anda merasa tidak enak badan?", "Gejala 11", JOptionPane.YES_NO_OPTION);
//if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Tonsilitis!","Hasil Diagnosa", JOptionPane.INFORMATION_MESSAGE);
new Tonsilitis().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
//}
else
{
JOptionPane.showMessageDialog(this,"Anda Menderita Sakit Batuk!","Hasil Diagnosa", JOptionPane.INFORMATION_MESSAGE);
new Sakit_Batuk().setVisible(true);
dispose();
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami batuk?", "Gejala 4", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami hidung tersumbat?", "Gejala 5", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri leher?", "Gejala 13", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami hidung meler?", "Gejala 8", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami letih dan lesu?", "Gejala 9", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami selaput landir dan bengkak?", "Gejala 11", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah ada benjolan dileher?", "Gejala 12", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Sinusitis Sfeinodalis","Hasil Diagnosa", JOptionPane.INFORMATION_MESSAGE);
new Sinusitis().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami hidung meler?", "Gejala 8", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami letih dan lesu?", "Gejala 9", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah terdapat selaput lendir dan bengkak?", "Gejala 11", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah bola mata Anda bergerak tanpa sadar?", "Gejala 17", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah anda mengalami nyeri antara mata?", "Gejala 26", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami nyeri di pinggir hidung?", "Gejala 27", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Sinusitis Etmoidalis!","Hasil Diagnosa",JOptionPane.INFORMATION_MESSAGE);
new Sinusitis().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Anda Menderita Sinusitis Frontalis!","Hasil Diagnosa",JOptionPane.INFORMATION_MESSAGE);
new Sinusitis().setVisible(true);
dispose();
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami nyeri pipi di bawah mata?", "Gejala 28", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami sakit gigi?", "Gejala 33", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Tuli!","Hasil Diagnosa",JOptionPane.INFORMATION_MESSAGE);
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami nyeri tenggorokan?", "Gejala 7", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami pembengkakan kelenjar getah bening?", "Gejala 14", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami suara serak?", "Gejala 16", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah mengalami air liur menetes?", "Gejala 22", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Abases Peritonsiler","Hasil Diagnosa", JOptionPane.INFORMATION_MESSAGE);
new Abases_Peritonsiler().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
}

}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri saat bicara atau menelan?", "Gejala 3", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri tenggorokan?", "Gejala 7", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri leher?", "Gejala 13", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami pembengkakan kelenjar getah bening?", "Gejala 14", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Faringitis","Hasil Diagnosa",JOptionPane.INFORMATION_MESSAGE);
new Faringitis().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami pembengkakan kelenjar getah bening?", "Gejala 14", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami leher bengkak?", "Gejala 19", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami tenggorokan gatal?", "Gejala 37", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Laringitis","Hasil Diagnosa", JOptionPane.INFORMATION_MESSAGE);
new Laringitis().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami hidung tersumbat?", "Gejala 5", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri telinga?", "Gejala 6", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami pendarahan hidung?", "Gejala 15", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami infeksi sinus?", "Gejala 25", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri wajah?", "Gejala 29", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Deviasi Septum","Hasil Diagnosa", JOptionPane.INFORMATION_MESSAGE);
new Deviasi_Septum().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri telinga?", "Gejala 6", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami mual dan muntah?", "Gejala 10", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami radang gendang telinga?", "Gejala 32", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this,"Anda Menderita Otitis Media Akut","Hasil Diagnosa",JOptionPane.INFORMATION_MESSAGE);
new Otitis_Media_Akut().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this,"Gejala Anda Tidak Terdeteksi!","Warning!", JOptionPane.INFORMATION_MESSAGE);
}
}
}
}
}
else//Jawaban NO dari Gejala 1
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda sakit kepala?", "Gejala 2", JOptionPane.YES_NO_OPTION);
if(answer == 0)//yes dari gejala 2
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda merasakan nyeri telinga?", "Gejala 6", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita Barotis Media!", "Hasil Diagnosa", JOptionPane.INFORMATION_MESSAGE);
new Barotitis_Media().setVisible(true);
dispose();
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda tidak bisa mendengar (tuli) ?", "Gejala 20", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda merasa ketidakseimbangan pada tubuh?", "Gejala 38", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita Tumor Syaraf Pendengaran!", "Hasil Diagnosa", JOptionPane.INFORMATION_MESSAGE);
new Tumor_Syaraf_Pendengaran().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
}
else//No dari Gejala 2
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda merasakan nyeri saat bicara / menelan?", "Gejala 3", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda batuk?", "Gejala 4", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda merasa nyeri tenggorokan?", "Gejala 7", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah leher Anda terasa nyeri?", "Gejala 13", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah suara Anda serak?", "Gejala 16", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah berat badan Anda turun?", "Gejala 23", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah bunyi nafas Anda terasa berbeda (abnormal)?", "Gejala 24", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit kanker laring!", "Hasil Diagnosis", JOptionPane.INFORMATION_MESSAGE);
new Kangker_Laring().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah terdapat benjolan di leher Anda?", "Gejala 12", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah terjadi pendarahan pada hidung Anda?", "Gejala 15", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah ada yang tumbuh di mulut Anda?", "Gejala 21", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah terjadi perubahan pada kulit Anda?", "Gejala 30", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah terjadi perubahan pada suara Anda?", "Gejala 31", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit kanker leher dan kepala!", "Hasil Diagnosis", JOptionPane.INFORMATION_MESSAGE);
new Kangker_Leher_Kepala().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah suara Anda serak?", "Gejala 16", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit Contract Ulcers!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
new Contract_Ulcers().setVisible(true);
dispose();
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah leher Anda bengkak?", "Gejala 19", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit Abaes Parafaringeal!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
new Abases_Parafaringeal().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
}
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah hidung Anda tersumbat?", "Gejala 5", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami pendarahan pada hidung?", "Gejala 15", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit Kanker Nasofaring!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
new Kangker_Nasofaring().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi! (coyan)", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri pada telinga?", "Gejala 6", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami mual dan muntah?", "Gejala 10", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami serangan vertigo?", "Gejala 34", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah telinga Anda terasa penuh?", "Gejala 36", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit Meniere!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
new Meniere().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami nyeri tenggorokan?", "Gejala 7", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah terdapat benjolan di leher Anda?", "Gejala 12", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit kanker Tonsil!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
new Kangker_Tonsil().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda mengalami mual dan muntah?", "Gejala 10", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah bola mata Anda bergerak tanpa sadar?", "Gejala 17", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit Neuronitis Vestibularis!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
new Neuronitis_Vestibularis().setVisible(true);
dispose();
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah terdapat benjolan di leher Anda?", "Gejala 12", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit Kanker Leher Metastatik!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
new Kangker_Leher_Metastatik().setVisible(true);
dispose();
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah bola mata Anda bergerak tanpa sadar?", "Gejala 17", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit Vertigo Postular!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
new Vertigo_Postular().setVisible(true);
dispose();
}
else
{
answer = JOptionPane.showConfirmDialog(this, "Apakah Anda tidak dapat mendengar (tuli) ?", "Gejala 20", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
answer = JOptionPane.showConfirmDialog(this, "Apakah telinga Anda berdenging?", "Gejala 35", JOptionPane.YES_NO_OPTION);
if(answer == 0)
{
JOptionPane.showMessageDialog(this, "Anda menderita penyakit Otosclerosis!", "Hasil Analisis", JOptionPane.INFORMATION_MESSAGE);
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
else
{
JOptionPane.showMessageDialog(this, "Gejala Anda tidak terdeteksi!", "Warning!", JOptionPane.WARNING_MESSAGE);
}
}
}
}
}
}
}
}
}
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
         new Detail().setVisible(true);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        new Tutor().setVisible(true);
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new Menu().setVisible(true);
dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
new Daftar_Pasien().setVisible(true);     
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
new Medis().setVisible(true);
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
                new Medis().setVisible(true);
dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
                new Daftar_Pasien().setVisible(true);
dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
                new Detail().setVisible(true);
dispose();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
                new History_Medis().setVisible(true);
dispose();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
                new Tutor().setVisible(true);
dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        // TODO add your handling code here:
                new History_Medis().setVisible(true);
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    // End of variables declaration//GEN-END:variables
}